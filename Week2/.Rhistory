#
#                            Create S&P Database
#
################################################################################
# Preliminaries
library(rstudioapi)  # This is a external library of functions
library(dplyr)
# Getting the path of your current open file
current_path = rstudioapi::getActiveDocumentContext()$path
setwd(dirname(current_path ))
rm(list=ls())
cat("\014")
install.packages(Quandl)
library(Quandl)
Quandl.api_key('EfNYF1EymebW8saMFp5B')
load("universe.rdata")
load("insider.rdata")
d <- merge(stock,stock_insider)
for(symbol in data1$ticker)
{
for(date in data1$transactiondate)
{
stock <- rbind(stock,data1$buy[data1$ticker==symbol & data1$transactiondate==date],data1$sell[data1$ticker==symbol & data1$transactiondate==date],data1$buyers[data1$ticker==symbol & data1$transactiondate==date],data1$seller[data1$ticker==symbol & data1$transactiondate==date])
break;
}
break;
}
stock_insider <- stock_insider %>% filter(stock_insider$transactiondate>="2018-02-01")
data<-stock_insider[order(stock_insider$ticker,stock_insider$transactiondate,stock_insider$rownum),]
data<-data[,c(1,2,5,10,13,14,15,16,17)]
data$buy <- ifelse(data$transactionshares>=0,data$transactionshares,0)
data$sell <- ifelse(data$transactionshares<0,data$transactionshares,0)
data$buy_transactionvalue<- ifelse(data$transactionshares>=0,data$transactionvalue,0)
data$sell_transactionvalue <- ifelse(data$transactionshares<0,data$transactionvalue,0)
data$buy_ownername<- ifelse(data$transactionshares>=0,data$ownername,0)
data$sell_ownername <- ifelse(data$transactionshares<0,data$ownername,0)
data1 <- data %>%
group_by(ticker,transactiondate) %>%
summarise(buy = sum(buy), sell = sum(sell), buyers = length(unique(buy_ownername[buy_ownername!=0])), seller = length(unique(sell_ownername[sell_ownername!=0])))
for(symbol in data1$ticker)
{
for(date in data1$transactiondate)
{
stock <- rbind(stock,data1$buy[data1$ticker==symbol & data1$transactiondate==date],data1$sell[data1$ticker==symbol & data1$transactiondate==date],data1$buyers[data1$ticker==symbol & data1$transactiondate==date],data1$seller[data1$ticker==symbol & data1$transactiondate==date])
break;
}
break;
}
View(data1)
View(data1)
d <- merge(stock,stock_insider)
d <- rbind(stock,stock_insider)
d <- merge(stock,stock_insider)
View(stock)
View(stock)
d <- merge(stock[,-c(4,5,7)],stock_insider)
for(symbol in data1$ticker)
{ print(symbol)
for(date in data1$transactiondate)
{
stock <- rbind(stock,data1$buy[data1$ticker==symbol & data1$transactiondate==date],data1$sell[data1$ticker==symbol & data1$transactiondate==date],data1$buyers[data1$ticker==symbol & data1$transactiondate==date],data1$seller[data1$ticker==symbol & data1$transactiondate==date])
print(date)
}
}
for(symbol in data1$ticker)
{ print(symbol)
for(date in as.Date(data1$transactiondate))
{
stock <- rbind(stock,data1$buy[data1$ticker==symbol & data1$transactiondate==date],data1$sell[data1$ticker==symbol & data1$transactiondate==date],data1$buyers[data1$ticker==symbol & data1$transactiondate==date],data1$seller[data1$ticker==symbol & data1$transactiondate==date])
print(date)
}
}
class(stock)
class(stock_insider)
d <- merge(stock,stock_insider)
rm(stock_insider)
rm(data)
d <- merge(stock,data1)
library(usethis)
install.packages("usethis")
library(usethis)
library(usethis)
usethis::edit_r_environ()
